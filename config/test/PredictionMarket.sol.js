"use strict";

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var factory = function factory(Pudding) {
  // Inherit from Pudding. The dependency on Babel sucks, but it's
  // the easiest way to extend a Babel-based class. Note that the
  // resulting .js file does not have a dependency on Babel.

  var PredictionMarket = (function (_Pudding) {
    _inherits(PredictionMarket, _Pudding);

    function PredictionMarket() {
      _classCallCheck(this, PredictionMarket);

      _get(Object.getPrototypeOf(PredictionMarket.prototype), "constructor", this).apply(this, arguments);
    }

    return PredictionMarket;
  })(Pudding);

  ;

  // Set up specific data for this class.
  PredictionMarket.abi = [{ "constant": false, "inputs": [{ "name": "odds", "type": "uint256" }], "name": "buyOrder", "outputs": [], "type": "function" }, { "constant": false, "inputs": [], "name": "awardBuyers", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "evaluateOdds", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [], "name": "cancelIncompleteOrders", "outputs": [], "type": "function" }, { "constant": false, "inputs": [], "name": "revert", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "odds", "type": "uint256" }], "name": "sellOrder", "outputs": [], "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "uint256" }], "name": "orders", "outputs": [{ "name": "seller", "type": "address" }, { "name": "buyer", "type": "address" }, { "name": "odds", "type": "uint256" }, { "name": "sellerQuantity", "type": "uint256" }, { "name": "buyerQuantity", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "odds", "type": "uint256" }, { "name": "quantity", "type": "uint256" }], "name": "cancelOrder", "outputs": [], "type": "function" }, { "constant": false, "inputs": [], "name": "awardSellers", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "ordersLength", "outputs": [{ "name": "result", "type": "uint256" }], "type": "function" }, { "inputs": [{ "name": "_endTime", "type": "uint256" }], "type": "constructor" }];
  PredictionMarket.binary = "6060604081905260326002556020806110f283395060806040525160008054600160a060020a0319163317905580600360005081905550506110ad806100456000396000f3606060405236156100825760e060020a600035046322f85eaa811461008457806358eae0041461014857806361cc576d1461020e57806370e18692146102185780637da3c3ab1461030c57806397514d90146103f1578063a85c38ef146104bf578063b6ed063214610581578063b6f29d501461063a578063be8acd3f146106fd575b005b61008260043560006000600060006000600060006000600060a060405190810160405280600081526020016000815260200160008152602001600081526020016000815260200150600060a06040519081016040528060008152602001600081526020016000815260200160008152602001600081526020015060036000505442101580610112575060018d105b8061011d575060638d115b15610d295760405133600160a060020a031690600090349082818181858883f19350505050506104b0565b610082600080548190600160a060020a03908116339091161415610751575b60015460ff831610156107555760018054839081101561000257600091825260050260008051602061108d83398151915281015460008051602061106d833981519152919091019250600160a060020a0316148015906101d257508054600160a060020a0316600014155b1561076357604051600382015460048301546001840154600160a060020a031692600092919091019082818181858883f19350505050506107e3565b6107086002545b90565b610082600080548190600160a060020a03908116339091161415610751576003544210610751575b60015460ff831610156107515760018054839081101561000257600091825260050260008051602061108d83398151915281015460008051602061106d833981519152919091019250600160a060020a031614156102c15760405181546003830154600160a060020a0391909116916000919082818181858883f150505050505b8054600160a060020a0316600014156103005760018101546004820154604051600160a060020a0392909216916000919082818181858883f150505050505b60019190910190610240565b610082600080548190600160a060020a03908116339091161415610751575b60015460ff831610156107555760018054839081101561000257600091825260050260008051602061108d83398151915281015460008051602061106d833981519152919091019250600160a060020a0316146103ab5760405160048201546001830154600160a060020a0316916000919082818181858883f150505050505b8054600160a060020a03166000146103e55780546040516003830154600160a060020a03929092169160009182818181858883f150505050505b6001919091019061032b565b61008260043560006000600060006000600060006000600060a060405190810160405280600081526020016000815260200160008152602001600081526020016000815260200150600060a0604051908101604052806000815260200160008152602001600081526020016000815260200160008152602001506003600050544210158061047f575060018d105b8061048a575060638d115b1561087b5760405133600160a060020a031690600090349082818181858883f150505050505b50505050505050505050505050565b61071a600435600180548290811015610002575060005260050260008051602061108d83398151915281015460008051602061106d8339815191528201547fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf88301547fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf98401547fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa9490940154600160a060020a03928316949390921692909185565b61008260043560243560035460009081908190421061059b575b60009250600091505b60015460ff83161015610bcd576001805483908110156100025760009190915260050260008051602061106d833981519152019050821515610c15576002810154851415610d18576001810154600160a060020a039081163390911614801561061757508054600160a060020a03166000145b15610c9d576004810180548590039081905560009011610ceb5760019250610cfe565b610082600080548190600160a060020a03908116339091161415610751575b60015460ff831610156107555760018054839081101561000257600091825260050260008051602061108d83398151915281015460008051602061106d833981519152919091019250600160a060020a0316148015906106c457508054600160a060020a0316600014155b156107ef57604051600382015460048301548354600160a060020a031692600092919091019082818181858883f193505050505061086f565b610708600154610215565b60408051918252519081900360200190f35b60408051600160a060020a039687168152949095166020850152838501929092526060830152608082015290519081900360a00190f35b5050565b600054600160a060020a0316ff5b6001810154600160a060020a03166000146107a95760018101546004820154604051600160a060020a0392909216916000919082818181858883f19350505050506107e3565b8054600160a060020a03166000146107e35780546040516003830154600160a060020a03929092169160009182818181858883f150505050505b60019190910190610167565b6001810154600160a060020a03166000146108355760018101546004820154604051600160a060020a0392909216916000919082818181858883f193505050505061086f565b8054600160a060020a031660001461086f5780546040516003830154600160a060020a03929092169160009182818181858883f150505050505b60019190910190610659565b339b50349a505b60008b11156104b057600099506000985060018d039750600096505b60015460ff881610156109125760018054889081101561000257600091825260050260008051602061106d833981519152018054909750600160a060020a03161480156108ef575060028601548890115b1561090657600286015460019a5096985095965087955b6001969096019561089e565b8915610970576002889055600180548a9081101561000257600091825260050260008051602061106d83398151915201905060038101549095508b106109ee578454600160a060020a0319168c1785556003850154909a0399610ae0565b8a8d6064038c6064020403915060a0604051908101604052808d8152602001600081526020018e81526020018c815260200183815260200150905060016000508054806001018281815481835581811511610b66576000839052610b6690600590810260008051602061106d83398151915290810191840201610a89565b8a85600201600050546064038c606402040393508460040160005054841015610acb576040805160a0810182528d8152600187810154600160a060020a03166020830152600288015492820192909252606081018d9052608081018690528154808301808455919550908281838015829011610ae5576000839052610ae590600590810260008051602061106d833981519152908101918402015b80821115610b62578054600160a060020a0319908116825560018201805490911681556000600283018190556003830181905560049290920191909155610a89565b8454600160a060020a0319168c17855560009a505b610bc8565b5050509190906000526020600020906005020160005080548551600160a060020a031991821617825560018201805460208801519216919091179055604085015160028201556060850151600382810191909155608086015160049283015590870180548790039055860180549c909c03909b5560009a50610ae0565b5090565b5050509190906000526020600020906005020160005082518154600160a060020a03199081169091178255602084015160018301805490921617905560408301516002820155606083015160038201556080830151600491909101555060009a505b610882565b8215610d2257600180546000198101808355909190828015829011610d1d576000839052610d1d90600590810260008051602061106d83398151915290810191840201610a89565b80600160005060018403815481101561000257600091825260050260008051602061106d83398151915201905081548154600160a060020a0319908116600160a060020a039283161783556001838101805491860154909316911617905560028281015490820155600382810154908201556004918201549101555b600191909101906105a4565b8054600160a060020a0390811633909116148015610cc857506001810154600160a060020a03166000145b15610d18576003810180548590039081905560009011610d035760019250610d18565b6004810154606481028690040360038201555b610d18565b60038101546064868103908202040360048201555b610c91565b505050505b5050505050565b339b50349a505b60008b11156104b05760009950600098508c6001019750600096505b60015460ff88161015610dd25760018054889081101561000257600091825260050260008051602061108d83398151915281015460008051602061106d833981519152919091019750600160a060020a0316148015610daf575060028601548890105b15610dc657600286015460019a5096985095965087955b60019690960195610d4c565b8915610e53576002889055600180548a908110156100025750600052600589027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa81015460008051602061106d8339815191529190910195508b10610ece57600185018054600160a060020a0319168d1790556004850154909a0399610f83565b8a8d8c6064020403915060a060405190810160405280600081526020018d81526020018e81526020018381526020018c81526020015090506001600050805480600101828181548183558181151161100657600083905261100690600590810260008051602061106d83398151915290810191840201610a89565b8a85600201600050548c606402040393508460030160005054841015610f6a576040805160a0810182528654600160a060020a03168152602081018e905260028701549181019190915260608101859052608081018c90526001805480820180835592955090918281838015829011610f88576000839052610f8890600590810260008051602061106d83398151915290810191840201610a89565b600185018054600160a060020a0319168d17905560009a505b611068565b5050509190906000526020600020906005020160005080548551600160a060020a031991821617825560018201805460208801519216919091179055604085015160028201556060850151600382810191909155608086015160049283015590870180549d909d03909c555099840180548490039055600099610f83565b5050509190906000526020600020906005020160005082518154600160a060020a03199081169091178255602084015160018301805490921617905560408301516002820155606083015160038201556080830151600491909101555060009a505b610d3056b10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6b10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7";

  if ("0xd6f084ee15e38c4f7e091f8dd0fe6fe4a0e203ef" != "") {
    PredictionMarket.address = "0xd6f084ee15e38c4f7e091f8dd0fe6fe4a0e203ef";

    // Backward compatibility; Deprecated.
    PredictionMarket.deployed_address = "0xd6f084ee15e38c4f7e091f8dd0fe6fe4a0e203ef";
  }

  PredictionMarket.generated_with = "1.0.2";
  PredictionMarket.contract_name = "PredictionMarket";

  return PredictionMarket;
};

// Nicety for Node.
factory.load = factory;

if (typeof module != "undefined") {
  module.exports = factory;
} else {
  // There will only be one version of Pudding in the browser,
  // and we can use that.
  window.PredictionMarket = factory;
}