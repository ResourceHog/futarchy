"use strict";

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var factory = function factory(Pudding) {
  // Inherit from Pudding. The dependency on Babel sucks, but it's
  // the easiest way to extend a Babel-based class. Note that the
  // resulting .js file does not have a dependency on Babel.

  var PredictionMarket = (function (_Pudding) {
    _inherits(PredictionMarket, _Pudding);

    function PredictionMarket() {
      _classCallCheck(this, PredictionMarket);

      _get(Object.getPrototypeOf(PredictionMarket.prototype), "constructor", this).apply(this, arguments);
    }

    return PredictionMarket;
  })(Pudding);

  ;

  // Set up specific data for this class.
  PredictionMarket.abi = [{ "constant": false, "inputs": [{ "name": "odds", "type": "uint256" }], "name": "buyOrder", "outputs": [], "type": "function" }, { "constant": false, "inputs": [], "name": "awardBuyers", "outputs": [], "type": "function" }, { "constant": false, "inputs": [], "name": "revert", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "odds", "type": "uint256" }], "name": "sellOrder", "outputs": [], "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "uint256" }], "name": "orders", "outputs": [{ "name": "seller", "type": "address" }, { "name": "buyer", "type": "address" }, { "name": "odds", "type": "uint256" }, { "name": "sellerQuantity", "type": "uint256" }, { "name": "buyerQuantity", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "odds", "type": "uint256" }, { "name": "quantity", "type": "uint256" }], "name": "cancelOrder", "outputs": [], "type": "function" }, { "constant": false, "inputs": [], "name": "awardSellers", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "ordersLength", "outputs": [{ "name": "result", "type": "uint256" }], "type": "function" }];
  PredictionMarket.binary = "606060405260008054600160a060020a031916331790556108f5806100246000396000f36060604052361561006c5760e060020a600035046322f85eaa811461006e57806358eae004146101a35780637da3c3ab146101a357806397514d90146101c1578063a85c38ef146102d2578063b6ed06321461032d578063b6f29d50146101a3578063be8acd3f14610332575b005b61006c60043560006000600060006000600060006000600060a060405190810160405280600081526020016000815260200160008152602001600081526020016000815260200150600060a060405190810160405280600081526020016000815260200160008152602001600081526020016000815260200150339b50349a505b60008b111561037e5760009950600098508c6001019750600096505b60015460ff88161015610641576001805488908110156100025760009182526005027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf78101546000805160206108d5833981519152919091019750600160a060020a0316148015610180575060028601548890105b1561019757600286015460019a5096985095965087955b6001969096019561010b565b61006c600054600160a060020a039081163390911614156101bf575b565b61006c60043560006000600060006000600060006000600060a060405190810160405280600081526020016000815260200160008152602001600081526020016000815260200150600060a060405190810160405280600081526020016000815260200160008152602001600081526020016000815260200150339b50349a505b60008b111561037e57600099506000985060018d039750600096505b60015460ff8816101561038d576001805488908110156100025760009182526005026000805160206108d5833981519152018054909750600160a060020a03161480156102af575060028601548890115b156102c657600286015460019a5096985095965087955b6001969096019561025e565b6103476004356001805482908110156100025760009182526005026000805160206108d5833981519152019050805460018201546002830154600384015460049490940154600160a060020a03938416955091909216929085565b61006c565b60015460408051918252519081900360200190f35b60408051600160a060020a039687168152949095166020850152838501929092526060830152608082015290519081900360a00190f35b50505050505050505050505050565b89156103e657600180548a908110156100025760009182526005026000805160206108d583398151915201905060038101549095508b10610464578454600160a060020a0319168c1785556003850154909a0399610556565b8a8d6064038c6064020403915060a0604051908101604052808d8152602001600081526020018e81526020018c8152602001838152602001509050600160005080548060010182818154818355818115116105dc5760008390526105dc9060059081026000805160206108d5833981519152908101918402016104ff565b8a85600201600050546064038c606402040393508460040160005054841015610541576040805160a0810182528d8152600187810154600160a060020a03166020830152600288015492820192909252606081018d905260808101869052815480830180845591955090828183801582901161055b57600083905261055b9060059081026000805160206108d5833981519152908101918402015b808211156105d8578054600160a060020a03199081168255600182018054909116815560006002830181905560038301819055600492909201919091556104ff565b8454600160a060020a0319168c17855560009a505b61063c565b5050509190906000526020600020906005020160005080548551600160a060020a031991821617825560018201805460208801519216919091179055604085015160028201556060850151600382810191909155608086015160049283015590870180548790039055860180549c909c03909b5560009a50610556565b5090565b5050509190906000526020600020906005020160005080548351600160a060020a0319918216178255602084015160018301805490921617905560408301516002820155606083015160038201556080830151600491909101555060009a505b610242565b89156106bd57600180548a908110156100025750600052600589027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa8101546000805160206108d58339815191529190910195508b1061073857600185018054600160a060020a0319168d1790556004850154909a03996107ed565b8a8d8c6064020403915060a060405190810160405280600081526020018d81526020018e81526020018381526020018c8152602001509050600160005080548060010182818154818355818115116108705760008390526108709060059081026000805160206108d5833981519152908101918402016104ff565b8a85600201600050548c6064020403935084600301600050548410156107d4576040805160a0810182528654600160a060020a03168152602081018e905260028701549181019190915260608101859052608081018c905260018054808201808355929550909182818380158290116107f25760008390526107f29060059081026000805160206108d5833981519152908101918402016104ff565b600185018054600160a060020a0319168d17905560009a505b6108d0565b5050509190906000526020600020906005020160005080548551600160a060020a031991821617825560018201805460208801519216919091179055604085015160028201556060850151600382810191909155608086015160049283015590870180549d909d03909c5550998401805484900390556000996107ed565b5050509190906000526020600020906005020160005080548351600160a060020a0319918216178255602084015160018301805490921617905560408301516002820155606083015160038201556080830151600491909101555060009a505b6100ef56b10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6";

  if ("0xaed6e4c9265abc13f38603fffd8834f480923f2c" != "") {
    PredictionMarket.address = "0xaed6e4c9265abc13f38603fffd8834f480923f2c";

    // Backward compatibility; Deprecated.
    PredictionMarket.deployed_address = "0xaed6e4c9265abc13f38603fffd8834f480923f2c";
  }

  PredictionMarket.generated_with = "1.0.2";
  PredictionMarket.contract_name = "PredictionMarket";

  return PredictionMarket;
};

// Nicety for Node.
factory.load = factory;

if (typeof module != "undefined") {
  module.exports = factory;
} else {
  // There will only be one version of Pudding in the browser,
  // and we can use that.
  window.PredictionMarket = factory;
}